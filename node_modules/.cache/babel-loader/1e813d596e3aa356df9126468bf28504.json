{"ast":null,"code":"var _jsxFileName = \"/Users/brycekappes-rocha/kenzie/Q2-Assignments/kapstone/todoodle/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useReducer, createContext } from \"react\";\nimport todosList from \"./todos.json\";\nimport TodoList from \"./components/TodoList\";\nimport Footer from \"./components/Footer\";\nimport { Route } from \"react-router-dom\";\nimport Youtube from \"./components/Youtube\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodosContext = /*#__PURE__*/createContext(null);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"UPDATE_INPUT\":\n      return { ...state,\n        userInput: action.payload\n      };\n\n    case \"ADD_TODO\":\n      return {\n        userInput: \"\",\n        todos: [...state.todos, {\n          title: action.payload,\n          id: Date.now(),\n          completed: false\n        }]\n      };\n\n    case \"TOGGLE_COMPLETE\":\n      return { ...state,\n        todos: state.todos.map(todo => {\n          let newTodo = { ...todo\n          };\n\n          if (newTodo.id === action.payload) {\n            newTodo.completed = !newTodo.completed;\n          }\n\n          return newTodo;\n        })\n      };\n\n    case \"DELETE_TODO\":\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case \"CLEAR_COMPLETE\":\n      return { ...state,\n        todos: state.todos.filter(todo => !todo.completed)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    todos: todosList,\n    userInput: \"\"\n  });\n\n  function handleChange(event) {\n    dispatch({\n      type: \"UPDATE_INPUT\",\n      payload: event.target.value\n    });\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      dispatch({\n        type: \"ADD_TODO\",\n        payload: state.userInput\n      });\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  function clearComplete(event) {\n    dispatch({\n      type: \"CLEAR_COMPLETE\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Youtube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodosContext.Provider, {\n      value: dispatch,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"todoapp\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"todos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-todo\",\n              placeholder: \"What needs to be done?\",\n              autoFocus: true,\n              onChange: event => handleChange(event),\n              value: state.userInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: state.todos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            clearComplete: clearComplete,\n            itemsLeft: state.todos.filter(todo => {\n              if (todo.completed === true) {\n                return false;\n              }\n\n              return true;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/active\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"todoapp\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"todos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-todo\",\n              placeholder: \"What needs to be done?\",\n              autoFocus: true,\n              onChange: event => handleChange(event),\n              value: state.userInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: state.todos.filter(todo => {\n              if (todo.completed === true) {\n                return false;\n              }\n\n              return true;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            clearComplete: clearComplete,\n            itemsLeft: state.todos.filter(todo => {\n              if (todo.completed === true) {\n                return false;\n              }\n\n              return true;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/completed\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"todoapp\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"todos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-todo\",\n              placeholder: \"What needs to be done?\",\n              autoFocus: true,\n              onChange: event => handleChange(event),\n              value: state.userInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: state.todos.filter(todo => {\n              if (todo.completed === true) {\n                return true;\n              }\n\n              return false;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            clearComplete: clearComplete,\n            itemsLeft: state.todos.filter(todo => {\n              if (todo.completed === true) {\n                return false;\n              }\n\n              return true;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"EaVM8x21AHKZFjpnadkNJpx8Wgc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brycekappes-rocha/kenzie/Q2-Assignments/kapstone/todoodle/src/App.js"],"names":["useEffect","useReducer","createContext","todosList","TodoList","Footer","Route","Youtube","TodosContext","reducer","state","action","type","userInput","payload","todos","title","id","Date","now","completed","map","todo","newTodo","filter","App","dispatch","handleChange","event","target","value","handleKeyDown","key","window","addEventListener","removeEventListener","clearComplete","length"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useEffect, useReducer, createContext } from \"react\";\nimport todosList from \"./todos.json\";\nimport TodoList from \"./components/TodoList\";\nimport Footer from \"./components/Footer\";\nimport { Route } from \"react-router-dom\";\nimport Youtube from \"./components/Youtube\"\n\nexport const TodosContext = createContext(null);\n\nfunction reducer(state, action) {\n  switch(action.type){\n      case \"UPDATE_INPUT\":\n        return {\n          ...state,\n          userInput: action.payload,\n        };\n      case \"ADD_TODO\":\n        return {\n          userInput: \"\",\n          todos: [\n            ...state.todos, \n            {\n              title: action.payload,\n              id: Date.now(),\n              completed: false,\n            },\n          ],\n        };\n        case \"TOGGLE_COMPLETE\":\n          return {\n            ...state,\n            todos: state.todos.map((todo) => {\n              let newTodo = {...todo};\n              if (newTodo.id === action.payload){\n                newTodo.completed = !newTodo.completed;\n              }\n              return newTodo\n            }),\n          };\n        case \"DELETE_TODO\":\n          return {\n            ...state,\n            todos: state.todos.filter((todo)=> todo.id !== action.payload)\n          }\n        case \"CLEAR_COMPLETE\":\n          return {\n            ...state,\n            todos: state.todos.filter((todo)=> !todo.completed)\n          };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, {\n    todos: todosList,\n    userInput: \"\",\n  });\n\n  function handleChange(event) {\n    dispatch({type:\"UPDATE_INPUT\", payload: event.target.value});\n  }\n\n  function handleKeyDown(event){\n    if(event.key===\"Enter\"){\n      dispatch({type: \"ADD_TODO\", payload: state.userInput});\n    }\n  }\n\n  useEffect(()=>{\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return ()=>{\n      window.removeEventListener(\"keydown\", handleKeyDown)\n    }\n  })\n\n  function clearComplete(event) {\n    dispatch({type: \"CLEAR_COMPLETE\"})\n  }\n\n  return (\n    <>\n    <Youtube/>\n      <TodosContext.Provider value={dispatch}>\n        <Route exact path=\"/\">\n          <section className=\"todoapp\">\n            <header className=\"header\">\n              <h1>todos</h1>\n              <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                autoFocus\n                onChange={event=>handleChange(event)}\n                value={state.userInput}\n              />\n            </header>\n            <TodoList todos={state.todos} />\n            <Footer clearComplete = {clearComplete}\n            itemsLeft={state.todos.filter((todo)=>{\n                if(todo.completed === true){\n                  return false\n                }\n                return true\n            }).length}/>\n          </section>\n        </Route>\n        <Route exact path=\"/active\">\n          <section className=\"todoapp\">\n            <header className=\"header\">\n              <h1>todos</h1>\n              <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                autoFocus\n                onChange={event=>handleChange(event)}\n                value={state.userInput}\n              />\n            </header>\n            <TodoList \n              todos={state.todos.filter((todo)=>{\n                if(todo.completed === true){\n                  return false\n                }\n                return true\n              })}\n            />\n            <Footer clearComplete = {clearComplete}\n              itemsLeft={state.todos.filter((todo)=>{\n                if(todo.completed === true){\n                  return false\n                }\n                return true\n            }).length}\n            />\n          </section>\n        </Route>\n        <Route exact path=\"/completed\">\n          <section className=\"todoapp\">\n            <header className=\"header\">\n              <h1>todos</h1>\n              <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                autoFocus\n                onChange={event=>handleChange(event)}\n                value={state.userInput}\n              />\n            </header>\n            <TodoList \n              todos={state.todos.filter((todo)=>{\n                if(todo.completed === true){\n                  return true\n                }\n                return false\n              })}\n            />\n            <Footer clearComplete = {clearComplete}\n              itemsLeft={state.todos.filter((todo)=>{\n                if(todo.completed === true){\n                  return false\n                }\n                return true\n            }).length}\n            />\n          </section>\n        </Route>\n      </TodosContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}